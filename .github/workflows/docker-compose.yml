name: Docker Compose Actions Workflow
on: push
jobs:
  build:
    name: Download dependencies and build frontend assets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Start containers
        run: ./scripts/start.sh
      - name: Temporary fix for permissions
        run: chmod 777 . && chmod 777 public && chmod 777 .docker
      - name: Cache vendor (PHP / composer)
        uses: actions/cache@v1
        with:
          path: /vendor
          key: ${{ runner.OS }}-php-build-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.OS }}-php-build-${{ env.cache-name }}-
            ${{ runner.OS }}-php-build-
      - name: Cache node_modules (JavaScript / yarn)
        uses: actions/cache@v1
        with:
          path: /node_modules
          key: ${{ runner.OS }}-js-build-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-js-build-${{ env.cache-name }}-
            ${{ runner.OS }}-js-build-
      - name: Install dependencies
        run: ./scripts/install-prod.sh

  test-curl:
    name: Browser-less tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check result
        run: curl -v http://127.0.0.1:8000

  test-cypress:
    name: Multiply by 9
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download dependencies
        run: docker pull "cypress/included:3.2.0"
      - name: Run E2E test
        run: ./scripts/e2e-tests.sh
      - name: Store cypress test results (screenshots)
        uses: actions/upload-artifact@v1
        with:
          name: cypress-screenshots
          path: tests/e2e/cypress/screenshots
      - name: Store cypress test results (videos)
        uses: actions/upload-artifact@v1
        with:
          name: cypress-videos
          path: tests/e2e/cypress/videos



